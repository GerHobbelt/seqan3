name: Linux

on:
  push:
    branches:
      - 'master'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: misc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  SEQAN3_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eexuo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Snippet gcc11"
            compiler: "gcc-11"
            build: snippet
            build_type: Release
            build_threads: 2
            test_threads: 1 # snippets create and delete files and some separate tests create/delete the same files
            requires_toolchain: true
            skip_build_tests: false
            skip_run_tests: false
            use_include_dependencies: "OFF"

          - name: "Performance gcc11"
            compiler: "gcc-11"
            build: performance
            build_type: Release
            build_threads: 2
            test_threads: 2
            requires_toolchain: true
            skip_build_tests: false
            skip_run_tests: false
            use_include_dependencies: "OFF"

          - name: "Header gcc13"
            compiler: "gcc-13"
            build: header
            build_type: Release
            build_threads: 2
            test_threads: 2
            requires_toolchain: true
            skip_build_tests: false
            skip_run_tests: false
            use_include_dependencies: "OFF"

          - name: "Header gcc11"
            compiler: "gcc-11"
            build: header
            build_type: Release
            build_threads: 2
            test_threads: 2
            requires_toolchain: true
            skip_build_tests: false
            skip_run_tests: false
            use_include_dependencies: "OFF"

          - name: "Non-cyclic tests"
            compiler: "gcc-11"
            build: unit
            build_type: Debug
            build_threads: 2
            test_threads: 2
            requires_toolchain: true
            skip_build_tests: true
            skip_run_tests: true
            use_include_dependencies: "ON"

          - name: "CMake external project"
            compiler: "gcc-11"
            build: external_project
            build_type: Debug
            build_threads: 1 # output is important to be in sequential order
            test_threads: 2
            requires_toolchain: true
            skip_build_tests: false
            skip_run_tests: true
            use_include_dependencies: "OFF"

          - name: "Documentation"
            build: documentation
            build_threads: 2
            test_threads: 2
            requires_toolchain: false
            skip_build_tests: true
            skip_run_tests: false
            use_include_dependencies: "OFF"

    steps:
      - name: Checkout SeqAn3
        uses: actions/checkout@v3
        with:
          path: seqan3
          fetch-depth: 1
          submodules: true

      - name: Checkout SeqAn2
        uses: actions/checkout@v3
        with:
          repository: seqan/seqan
          path: seqan3/submodules/seqan
          fetch-depth: 1

      - name: Setup Package Manager
        uses: seqan/actions/setup-package-manager@main

      - name: Install CMake
        uses: seqan/actions/setup-cmake@main
        with:
          cmake: 3.16.9

      - name: Install CMake dependency
        if: matrix.build == 'external_project'
        run: |
          mkdir -p /tmp/libidn11-download
          wget --retry-connrefused --waitretry=30 --read-timeout=30 --timeout=30 --tries=20 --no-clobber --quiet --directory-prefix=/tmp/libidn11-download/ http://ftp.de.debian.org/debian/pool/main/libi/libidn/libidn11_1.33-3_amd64.deb
          sudo dpkg -i /tmp/libidn11-download/libidn11_1.33-3_amd64.deb

      - name: Install Doxygen
        if: matrix.build == 'documentation'
        uses: seqan/actions/setup-doxygen@main
        with:
          doxygen: 1.9.6

      - name: Setup toolchain
        if: matrix.requires_toolchain
        uses: seqan/actions/setup-toolchain@main
        with:
          compiler: ${{ matrix.compiler }}
          ccache_size: 75M

      - name: Configure tests
        run: |
          mkdir seqan3-build
          cd seqan3-build
          cmake ../seqan3/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                                   -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" \
                                                   -DSEQAN3_VERBOSE_TESTS=OFF \
                                                   -DSEQAN3_BENCHMARK_MIN_TIME=0.01 \
                                                   -DSEQAN3_USE_INCLUDE_DEPENDENCIES="${{ matrix.use_include_dependencies }}"
          case "${{ matrix.build }}" in
            unit) make -j${{ matrix.build_threads }} gtest_build;;
            snippet) make -j${{ matrix.build_threads }} gtest_build;;
            performance) make -j${{ matrix.build_threads }} gbenchmark_build;;
            header) make -j${{ matrix.build_threads }} gtest_build gbenchmark_build;;
            external_project) make -j${{ matrix.build_threads }} seqan3_test_prerequisite sharg_test_prerequisite;;
            documentation) make -j${{ matrix.build_threads }} download-cppreference-doxygen-web-tag;;
          esac

      - name: Check cyclic includes
        if: matrix.use_include_dependencies == 'ON'
        run: |
          cd seqan3-build
          make -k -j${{ matrix.build_threads }} all_dependencies
          cmake . # are tests cyclic?

      - name: Build tests
        if: ${{ !matrix.skip_build_tests }}
        run: |
          ccache -z || true
          cd seqan3-build
          make -k -j${{ matrix.build_threads }}
          ccache -sv || true

      - name: Run tests
        if: ${{ !matrix.skip_run_tests }}
        run: |
          cd seqan3-build
          ctest . -j${{ matrix.test_threads }} --output-on-failure
